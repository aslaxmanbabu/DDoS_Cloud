worker_processes 1;

error_log D:/Official/Final/Implementation/nginx/logs/error.log;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log D:/Official/Final/Implementation/nginx/logs/access.log main;

    sendfile        on;
    keepalive_timeout 65;

    upstream validation_server {
        server localhost:5001;  # Flask validation server
    }

    upstream main_server {
        server 127.0.0.1:8080;  # Main Python server
    }

    server {
        listen 80;
        server_name localhost;

        include D:/Official/Final/Implementation/TempLogs/suspicious_ips.conf;

        # Block specific IP addresses
        deny 192.168.1.37;

        

        # Location block to handle requests
        location / {
            access_by_lua_block {
                local alert_file = "D:/Official/Final/Implementation/alert_state.txt"
                local file = io.open(alert_file, "r")
                local alert_active = "false"  -- Default value if file doesnt exist
                local captcha_status = ngx.var.cookie_captcha_status or "invalid" -- Get the captcha status from cookies

                if file then
                    alert_active = file:read("*line")
                    file:close()
                end

                -- Redirect logic based on conditions
                if alert_active == "true" then
                    if captcha_status == "valid" then
                        ngx.header["Set-Cookie"] = "captcha_status=; Max-Age=0; Path=/"
                        ngx.exec("@main_server")
                    else
                        ngx.exec("@validation")
                    end
                elseif alert_active == "false" then
                    ngx.exec("@main_server")
                end
            }


            # Default behavior: forward to main server if no alert state
            
        }

        # Internal location for validation server
        location @validation {
            # Forward request to Flask validation server
            proxy_pass http://validation_server;  # Forward to validation server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;  # Forward cookies
        }

        location @main_server {
            proxy_pass http://main_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;  # Forward cookies
        }

        # Webhook endpoint to trigger alert
        location /webhook {
            content_by_lua_block {
                local alert_file = "D:/Official/Final/Implementation/alert_state.txt"

                -- Set alert state to true in the file
                local file = io.open(alert_file, "w")
                if file then
                    file:write("true")
                    file:close()
                end

                -- Schedule alert deactivation after 1 hour (3600 seconds)
                ngx.timer.at(3600, function()
                    local file = io.open(alert_file, "w")
                    if file then
                        file:write("false")
                        file:close()
                    end
                end)

                -- Set response status and content type
                ngx.status = 200  -- Set HTTP status code to 200 (OK)
                ngx.header["Content-Type"] = "text/html"  -- Set content type to HTML

                -- Return HTML content
                ngx.say([[ 
                    <html>
                        <body>
                            <h2>Alert Activated</h2>
                            <p>Traffic will now be redirected to the validation server for the next hour.</p>
                            <p>Status: <strong>200 OK</strong></p>
                        </body>
                    </html>
                ]])
            }
        }
    }
}
